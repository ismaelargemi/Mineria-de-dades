knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(arules)
library(tidyverse)
library(knitr)
library(ggplot2)
library(lubridate)
library(plyr)
library(arulesViz)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load('dades_post_pca.Rdata')
data$CNT_FAM_MEMBERS <- (cut(data$CNT_FAM_MEMBERS, breaks = c(-Inf, 1.1,2.1,3.1,Inf), labels = c("1", "2", "3", ">=4")))
numeric <- which(sapply(data, is.numeric))
dcat <- discretizeDF(data, default = list(method = "interval", breaks = 10, include.lowest = TRUE))
levels(dcat$OWN_CAR_AGE) <-  c("Menos de 5", "[5,9]", "[10,13]", "[14,18]", "[19,22]", "[23,27]", "[28,32]", "[33,36]", "[37,41]", "Más de 42")
levels(dcat$AGE_YEARS) <- c( "Menys de 26", "[26,30]", "[31,35]", "[36,39]", "[40,44]", "[45,49]", "[50,53]", "[54,58]", "[59,63]", "Más de 62" )
# comprovació de que segueixen la mateixa distribució
# par(mfrow=c(1,2))
# for (i in numeric){
#   hist(data[,i], main = colnames(data)[i])
#   barplot(table(dcat[,i]))
# }
tr <- as(dcat, "transactions") # tendra tantas columnas como categorias
tr
summary(tr)
soporte_minimo <- 10/nrow(data) # Support 10/n
confianza_mínima <- 0.8 # Confiance
tamanyo_conjunto <- 10  # Tamaño máximo del conjunto
reglas.asociacion <- apriori(tr, parameter = list(supp = soporte_minimo, conf = confianza_mínima,
maxlen = tamanyo_conjunto)) # rhs = és la variable output
target1 <- subset(reglas.asociacion, subset = rhs%in%"TARGET=1" & lift > 1.2)
target0 <- subset(reglas.asociacion, subset = rhs%in%"TARGET=0" & lift > 1.2)
subconjunto.reglas <- which(colSums(is.subset(target0, target0)) > 1)
subconjunto.target0 <- target0[-subconjunto.reglas]
testFisher <- interestMeasure(subconjunto.target0,
measure = "fishersExactTest",
transactions = tr)
summary(testFisher)
# quality(subconjunto.target0) <- cbind(quality(subconjunto.target0), testFisher)
# testFisher <- testFisher[-(which(testFisher > 0.05))]
subconjunto.target0 <- subconjunto.target0[-(which(testFisher > 0.05))]
rm(subconjunto.reglas)
rm(testFisher)
subconjunto.reglas <- which(colSums(is.subset(target1, target1)) > 1)
subconjunto.target1 <- target1[-subconjunto.reglas]
testFisher <- interestMeasure(subconjunto.target1,
measure = "fishersExactTest",
transactions = tr)
summary(testFisher)
# quality(subconjunto.target1) <- cbind(quality(subconjunto.target1), testFisher)
# Visualización per a target = 0
plot(subconjunto.target0, measure = c("support", "lift"), shading = "confidence")
plot(subconjunto.target0, method = "two-key plot")
# plot(subconjunto.target0, method = "grouped") # no s'enten res
# plot(subconjunto.target0, method = "paracoord") # aquest no s'executa
# plot(subconjunto.target0, method = "graph") # no s'entèn rés
# Visualización per a target = 1
plot(subconjunto.target1, measure = c("support", "lift"), shading = "confidence")
plot(subconjunto.target1, method = "two-key plot")
# plot(subconjunto.target1, method = "grouped") #no s'enten res
# plot(subconjunto.target0, method = "paracoord") # aquest no s'executa
# plot(subconjunto.target0, method = "graph") # no s'entèn rés
# Visualización per a target = 1
plot(subconjunto.target1, measure = c("support", "lift"), shading = "confidence")
plot(subconjunto.target1, method = "two-key plot")
# plot(subconjunto.target1, method = "grouped") #no s'enten res
# plot(subconjunto.target1, method = "paracoord") # aquest no s'executa
# plot(subconjunto.target1, method = "graph") # no s'entèn rés
# Visualización per a target = 0
plot(subconjunto.target0, measure = c("support", "lift"), shading = "confidence")
plot(subconjunto.target0, method = "two-key plot")
# plot(subconjunto.target0, method = "grouped") # no s'enten res
# plot(subconjunto.target0, method = "paracoord") # aquest no s'executa
# plot(subconjunto.target0, method = "graph") # no s'entèn rés
# Visualización per a target = 1
plot(subconjunto.target1, measure = c("support", "lift"), shading = "confidence")
plot(subconjunto.target1, method = "two-key plot")
# plot(subconjunto.target1, method = "grouped") #no s'enten res
# plot(subconjunto.target1, method = "paracoord") # aquest no s'executa
# plot(subconjunto.target1, method = "graph") # no s'entèn rés
subconjunto.target0<-subconjunto.target0[order(quality(subconjunto.target0)[,"lift"], decreasing = TRUE)]
top <- subconjunto.target0[1:10]
inspect(top)
plot(top, measure = c("support", "lift"), shading = "confidence")
plot(top, method = "two-key plot")
plot(top, method = "grouped") #no s'enten res
plot(top, method = "paracoord") # aquest no s'executa
plot(top, method = "graph") # no s'entèn rés
subconjunto.target0<-subconjunto.target0[order(quality(subconjunto.target0)[,"lift"], decreasing = TRUE)]
top <- subconjunto.target0[1:10]
inspect(top)
plot(top, measure = c("support", "lift"), shading = "confidence")
# plot(top, method = "two-key plot")
# plot(top, method = "grouped") #no s'enten res
plot(top, method = "paracoord") # aquest no s'executa
# plot(top, method = "graph") # no s'entèn rés
subconjunto.target1<-subconjunto.target1[order(quality(subconjunto.target1)[,"lift"], decreasing = TRUE)]
top2 <- subconjunto.target1[1:10]
inspect(top2)
plot(top2, measure = c("support", "lift"), shading = "confidence")
plot(top2, method = "paracoord")
# plot(subconjunto.target1, method = "two-key plot")
# plot(subconjunto.target1, method = "grouped") #no s'enten res
# plot(subconjunto.target1, method = "paracoord") # aquest no s'executa
# plot(subconjunto.target1, method = "graph") # no s'entèn rés
subconjunto.target0
# plot(subconjunto.target1, method = "two-key plot")
# plot(subconjunto.target1, method = "grouped") #no s'enten res
# plot(subconjunto.target1, method = "paracoord") # aquest no s'executa
# plot(subconjunto.target1, method = "graph") # no s'entèn rés
subconjunto.target1
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, include = FALSE)
class(inspect(top))
getwd()
