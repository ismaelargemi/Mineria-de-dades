knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- get (load('Dades preprocessades.Rdata'))
rm(df_preprocessed)
library("factoextra")
library("kableExtra")
# summary(data)
# Eliminamos las variables a las que se les ha realizado la transformación log
data <- data[ , -which(names(data) %in% c("AMT_INCOME_TOTAL","AMT_CREDIT","AMT_ANNUITY","AMT_GOODS_PRICE","DAYS_BIRTH"))]
#Eliminamos DAYS_BIRTH, ya que contamos con la variable AGE_YEARS
# Nos quedamos sólo con los datos numéricos
numeric <- which(sapply(data, is.numeric))
data_numeric <- data[, numeric]
# sapply(data_numeric, class)
pc1 <- prcomp(data_numeric, scale=TRUE)
inerProj<- pc1$sdev^2
totalIner<- sum(inerProj)
pinerEix<- 100*inerProj/totalIner
percInerAccum<-100*cumsum(pc1$sdev[1:dim(data_numeric)[2]]^2)/dim(data_numeric)[2]
df <- data.frame(x=1:length(percInerAccum),
y=(100*cumsum(pc1$sdev[1:dim(data_numeric)[2]]^2)/dim(data_numeric)[2])/(100/40))
p <- fviz_eig(pc1, addlabels = TRUE,ylim=c(0,40),barcolor = "#53868B", barfill = "#DCF0F8")
p <- p +
geom_point(data=df, aes(x,y), size=2, color="#8B3E2F") +
geom_line(data=df, aes(x,y), color="#8B3E2F") +
scale_y_continuous(sec.axis = sec_axis(~ . * (100/40),
name = "Cumulative proportion of variance explained (%)")) +
geom_text(data = df, aes(x,y-1.5,label=paste(round((y*100/40),1),"%"))) +
ggtitle("Explained inertia by each dimension") +
theme_minimal()
p
nd <- which(percInerAccum >= 80)[1]
Psi <- pc1$x[,1:nd]
iden <- row.names(data_numeric) # Etiquetas de los individuos
etiq <- names(data_numeric) # Etiquetas de variables numéricas
ze <- rep(0,length(etiq)) # Vector necesario para realizar gráficos posteriores
# dim(Psi)
# En el objeto "combn" se guardan todos los pares de dimensiones a graficar
combn <- as.data.frame(t(combn(1:nd,2)))
grafic = c()
for(i in 1:nrow(combn)){
grafic[[i]] = fviz_pca_var(pc1,axes = c(combn[i,1],combn[i,2]),col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE) + theme_minimal()
}
grafic[[1]]
# COMENTADO PORQUE DA EL MISMO GRAFICO ANTERIOR
# eje1 <- 1
# eje2 <- 2
# Phi = cor(data_numeric, Psi)
# X <- Phi[, eje1]
# Y <- Phi[, eje2]
# plot(Psi[,eje1],Psi[,eje2],type="n",xlim=c(min(X,0),max(X,0)), ylim=c(-1,1),
#      xlab = "CP1", ylab = "CP2")
# axis(side=1, pos= 0, labels = F)
# axis(side=3, pos= 0, labels = F)
# axis(side=2, pos= 0, labels = F)
# axis(side=4, pos= 0, labels = F)
# arrows(ze, ze, X, Y, length = 0.07,col="blue")
# text(X,Y,labels=etiq,col="darkblue", cex=0.7)
kbl(pc1$rotation[,1:5],
caption = "Correlación de cada variable con cada plano factorial"
, booktabs=T)%>%
kable_styling(position = "center",
latex_options = c("HOLD_position"))
data_numeric <- data_numeric[ , -which(names(data_numeric) %in% c("log_AMT_GOODS_PRICE"))]
pc1 <- prcomp(data_numeric, scale = TRUE)
inerProj<- pc1$sdev^2
totalIner<- sum(inerProj)
pinerEix<- 100*inerProj/totalIner
percInerAccum<-100*cumsum(pc1$sdev[1:dim(data_numeric)[2]]^2)/dim(data_numeric)[2]
df <- data.frame(x=1:length(percInerAccum), y=(100*cumsum(pc1$sdev[1:dim(data_numeric)[2]]^2)/dim(data_numeric)[2])/(100/percInerAccum[1]))
p <- fviz_eig(pc1, addlabels = TRUE,ylim=c(0,percInerAccum[1]),barcolor = "#53868B", barfill = "#DCF0F8")
p <- p +
geom_point(data=df, aes(x,y), size=2, color="#8B3E2F") +
geom_line(data=df, aes(x,y), color="#8B3E2F") +
scale_y_continuous(sec.axis = sec_axis(~ . * (100/percInerAccum[1]),
name = "Cumulative proportion of variance explained (%)")) +
geom_text(data = df, aes(x,y-1.5,label=paste(round((y*100/percInerAccum[1]),1),"%"))) +
ggtitle("Explained inertia by each dimension") + theme_minimal()
p
nd <- which(percInerAccum >= 80)[1]
Psi <- pc1$x[,1:nd]
iden <- row.names(data_numeric)
etiq <- names(data_numeric)
ze <- rep(0,length(etiq))
Phi <- cor(data_numeric,Psi)
combn <- as.data.frame(t(combn(1:nd,2)))
grafic = c()
for(i in 1:nrow(combn)){
grafic[[i]] = fviz_pca_var(pc1,axes = c(combn[i,1],combn[i,2]),col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE) + theme_minimal()
}
grafic[[1]]
kbl(pc1$rotation[,1:5],
caption = "Correlación de cada variable con cada plano factorial"
, booktabs=T)%>%
kable_styling(position = "center",
latex_options = c("HOLD_position"))
data_numeric <- data_numeric[ , -which(names(data_numeric) %in% c("log_AMT_ANNUITY"))]
pc1 <- prcomp(data_numeric, scale = TRUE)
inerProj<- pc1$sdev^2
totalIner<- sum(inerProj)
pinerEix<- 100*inerProj/totalIner
percInerAccum<-100*cumsum(pc1$sdev[1:dim(data_numeric)[2]]^2)/dim(data_numeric)[2]
df <- data.frame(x=1:length(percInerAccum), y=(100*cumsum(pc1$sdev[1:dim(data_numeric)[2]]^2)/dim(data_numeric)[2])/(100/percInerAccum[1]))
p <- fviz_eig(pc1, addlabels = TRUE,ylim=c(0,percInerAccum[1]),barcolor = "#53868B", barfill = "#DCF0F8")
p <- p +
geom_point(data=df, aes(x,y), size=2, color="#8B3E2F") +
geom_line(data=df, aes(x,y), color="#8B3E2F") +
scale_y_continuous(sec.axis = sec_axis(~ . * (100/percInerAccum[1]),
name = "Cumulative proportion of variance explained (%)")) +
geom_text(data = df, aes(x,y-1.5,label=paste(round((y*100/percInerAccum[1]),1),"%"))) +
ggtitle("Explained inertia by each dimension") + theme_minimal()
p
nd <- which(percInerAccum >= 80)[1]
Psi <- pc1$x[,1:nd]
iden <- row.names(data_numeric)
etiq <- names(data_numeric)
ze <- rep(0,length(etiq))
Phi <- cor(data_numeric,Psi)
combn <- as.data.frame(t(combn(1:nd,2)))
grafic = c()
for(i in 1:nrow(combn)){
grafic[[i]] = fviz_pca_var(pc1,axes = c(combn[i,1],combn[i,2]),col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE) + theme_minimal()
}
grafic[[1]]
kbl(pc1$rotation[,1:5],
caption = "Correlación de cada variable con cada plano factorial"
, booktabs=T)%>%
kable_styling(position = "center",
latex_options = c("HOLD_position"))
data_numeric <- data_numeric[ , -which(names(data_numeric) %in% c("DIFF_CREDIT_GOODS"))]
pc1 <- prcomp(data_numeric, scale = TRUE)
inerProj<- pc1$sdev^2
totalIner<- sum(inerProj)
pinerEix<- 100*inerProj/totalIner
percInerAccum<-100*cumsum(pc1$sdev[1:dim(data_numeric)[2]]^2)/dim(data_numeric)[2]
df <- data.frame(x=1:length(percInerAccum), y=(100*cumsum(pc1$sdev[1:dim(data_numeric)[2]]^2)/dim(data_numeric)[2])/(100/percInerAccum[1]))
p <- fviz_eig(pc1, addlabels = TRUE,ylim=c(0,percInerAccum[1]),barcolor = "#53868B", barfill = "#DCF0F8")
p <- p +
geom_point(data=df, aes(x,y), size=2, color="#8B3E2F") +
geom_line(data=df, aes(x,y), color="#8B3E2F") +
scale_y_continuous(sec.axis = sec_axis(~ . * (100/percInerAccum[1]),
name = "Cumulative proportion of variance explained (%)")) +
geom_text(data = df, aes(x,y-1.5,label=paste(round((y*100/percInerAccum[1]),1),"%"))) +
ggtitle("Explained inertia by each dimension") + theme_minimal()
p
nd <- which(percInerAccum >= 80)[1]
Psi <- pc1$x[,1:nd]
iden <- row.names(data_numeric)
etiq <- names(data_numeric)
ze <- rep(0,length(etiq))
Phi <- cor(data_numeric,Psi)
combn <- as.data.frame(t(combn(1:nd,2)))
grafic = c()
for(i in 1:nrow(combn)){
grafic[[i]] = fviz_pca_var(pc1,axes = c(combn[i,1],combn[i,2]),col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE) + theme_minimal()
}
grafic[[1]]
kbl(pc1$rotation[,1:4],
caption = "Correlación de cada variable con cada plano factorial"
, booktabs=T)%>%
kable_styling(position = "center",
latex_options = c("HOLD_position"))
# kable(Phi)
# Aixo pendent perque en teoria les dues formes son correctes perque mostren les correlacions entre variables originals i PCs, pero donen numeros diferents. S'ha de preguntar pero fem servir la segona forma per ara.
grafic[[1]]
kbl(pc1$rotation[,1:4],
caption = "Correlación de cada variable con cada plano factorial"
, booktabs=T)%>%
kable_styling(position = "center",
latex_options = c("HOLD_position"))
var_categoriques = which(sapply(data, is.factor))
plot(Psi[,eje1],Psi[,eje2],type="n",xlim=c(-1.6,1.6), ylim=c(-1,1),
xlab = "CP1", ylab = "CP2")
eje1 <- 1
eje2 <- 2
plot(Psi[,eje1],Psi[,eje2],type="n",xlim=c(-1.6,1.6), ylim=c(-1,1),
xlab = "CP1", ylab = "CP2")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
#nominal qualitative variables
dcat<-c(1:8)
#divide categoricals in several graphs if joint representation saturates
#build a palette with as much colors as qualitative variables
#colors<-c("blue","red","green","orange","darkgreen")
#alternative
colors<-rainbow(length(var_categoriques))
c<-1
for(k in var_categoriques){
seguentColor<-colors[c]
varcat <- as.factor(data[,k])
fdic1 <- tapply(Psi[,eje1], varcat, mean)
fdic2 <- tapply(Psi[,eje2], varcat, mean)
text(fdic1, fdic2, levels(varcat), col=seguentColor, cex=0.8, font=3)
c<-c+1
}
legend("topright",names(var_categoriques)[dcat],pch=1,col=colors, cex=0.6)
col <- rainbow(length(var_categoriques))
c <- 1
X <- Phi[, eje1]
Y <- Phi[, eje2]
for(k in var_categoriques){
par(cex.main=1, cex.lab=1)
plot(Psi[,1],Psi[,2],type="n",
xlab=paste0("PC",1," (",round(pinerEix[1],4),"%)"),
ylab=paste0("PC",2," (",round(pinerEix[2],4),"%)"),
xlim=c(-1.5,1.5), ylim=c(-1,1),
main="Projeccions sobre el pla factorial de variables categòriques")
axis(side=1, pos=0, at=seq(-70, 70, by=0.5), labels = F, col="black")
axis(side=2, pos=0, at=seq(-70, 70, by=0.5), labels = F, col="black")
axis(side=3, pos=0, at=seq(-70, 70, by=0.5), labels = F, col="black")
axis(side=4, pos=0, at=seq(-70, 70, by=0.5), labels = F, col="black")
arrows(ze, ze, X, Y, length = 0.05, col=c("aquamarine3","aquamarine4"))
text(X,Y,labels=etiq,col=c("aquamarine3","aquamarine4"), cex=0.85, font=3)
varcat <- as.factor(data[,k])
fdic1 <- tapply(Psi[,1], varcat, mean)
fdic2 <- tapply(Psi[,2], varcat, mean)
text(fdic1, fdic2, levels(varcat), col=seguentColor, cex=0.85, font=3)
legend("bottomleft", legend = names(var_categoriques)[c], fill=seguentColor,
text.font=2, cex=1, ncol=1, bty="n")
c <- c+1
}
